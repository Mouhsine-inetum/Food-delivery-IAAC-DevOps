trigger: none

parameters:
  - name: variableGroup
    type: string
    default: vg-pfu-infrastructure
  - name: serviceConnection
    type: string
    default: Visual Studio Professional Subscription(0f7a3b62-c1a4-4aa9-97c3-3bf5f497b5ab)
  - name: environment
    type: string
    values:
      - dev
      - acc
      - prod

variables:
  - group: ${{ parameters.variableGroup }}
  - name: version
    value: 001
  - name: rgName
    value: "rg-$(companyShort)-$(domainShort)-$(appShort)-$(locationAbbr)-${{ parameters.environment }}-$(version)"
  - name: partName
    value: "$(companyShort)-$(domainShort)-$(appShort)-$(locationAbbr)-${{ parameters.environment }}-$(version)"

stages:
  - template: "./templates/stages/stage-deploy-rg.yml@self"
    parameters:
      stage: StageProvisionRG
      resource: "RG"
      serviceConnection: "${{ parameters.serviceConnection }}"
      rgName: "$(rgName)"
      location: "$(location)"
      owner: "$(owner)"
      costCenter: "$(costCenter)"
      application: "$(application)"
      desc: "$(desc)"
      repo: "$(repo)"

  - template: "./templates/stages/stage-deploy-infra.yml@self"
    parameters:
      stage: StageProvisionInfrastructure_storages
      dependsOn:
        - StageProvisionRG
      condition: "succeeded()"
      serviceConnection: "${{ parameters.serviceConnection }}"
      rgName: "$(rgName)"
      infraPath: "infrastructure"
      location: "$(location)"
      owner: "$(owner)"
      costCenter: "$(costCenter)"
      application: "$(application)"
      desc: "$(desc)"
      repo: "$(repo)"
      version: "$(version)"
      partName: "$(partName)"
      resourceBase: "storage"
      resources:
        - manId: "UserManagedIdentity"
          id: "UserManagedIdentity"
          name: "User Managed Identity"
          job: "JobDeployInfrastructureManagedId"
          path: "managedId"
          dependencies: []
          paramOverride: ""

        - kv: "keyVault"
          id: "KeyVault"
          name: "Key Vault"
          path: "keyVault"
          dependencies: [JobDeployInfra_UserManagedIdentity]
          paramOverride: ""




  - template: "./templates/stages/stage-deploy-infra.yml@self"
    parameters:
      stage: StageProvisionInfrastructure_web
      dependsOn:
        - StageProvisionInfrastructure_storages
      condition: "succeeded()"
      serviceConnection: "${{ parameters.serviceConnection }}"
      rgName: "$(rgName)"
      infraPath: "infrastructure"
      location: "$(location)"
      owner: "$(owner)"
      costCenter: "$(costCenter)"
      application: "$(application)"
      desc: "$(desc)"
      repo: "$(repo)"
      version: "$(version)"
      partName: "$(partName)"
      resourceBase: "web"
      resources:
          - webApp: "webApp"
            id: "WebApp"
            name: "Web Api"
            path: "webApp"
            dependencies: []
            paramOverride: >-
              -branch "main"
              -repoUrl "https://github.com/Mouhsine-inetum/Food-delivery-server-alternate.git"
              -skuApiServiceName "B1"
              -skuApiServiceCapacity 3
          
          - appConfig: "appConfiguration"
            id: "appConfig"
            name: "App Configuration"
            path: "appConfig"
            dependencies: [JobDeployInfra_WebApp]
            paramOverride: >- 
              -apiConf ["{
                          name: 'ClientSettings__ClientDomain'
                          value: 'https://localhost:44373'
                        }"]

  # - template: "./templates/stages/stage-deploy-infra.yml@self"
  #   parameters:
  #     stage: StageProvisionInfrastructure_SqlServerDb
  #     dependsOn:
  #       - StageProvisionInfrastructure_storages
  #     condition: "succeeded()"
  #     serviceConnection: "${{ parameters.serviceConnection }}"
  #     rgName: "$(rgName)"
  #     infraPath: "infrastructure"
  #     location: "$(location)"
  #     owner: "$(owner)"
  #     costCenter: "$(costCenter)"
  #     application: "$(application)"
  #     desc: "$(desc)"
  #     repo: "$(repo)"
  #     version: "$(version)"
  #     partName: "$(partName)"
  #     resourceBase: "sql server and db"
  #     resources:
  #         - webApp: "sql"
  #           id: "SqlServerDb"
  #           name: "sql server & db"
  #           path: "sqlDb"
  #           dependencies: []
  #           paramOverride: >-
  #             -sqlAdminLogin "adminUser"
  #             -kvName "kvfoodeliverywesteurope"
  #             -rgKvName "cloud-shell-storage-westeurope"

  # - template: "./templates/stages/stage-deploy-infra.yml@self"
  #   parameters:
  #     stage: StageProvisionInfrastructure_ServiceBus
  #     dependsOn:
  #       - StageProvisionInfrastructure_SqlServerDb
  #     condition: "succeeded()"
  #     serviceConnection: "${{ parameters.serviceConnection }}"
  #     rgName: "$(rgName)"
  #     infraPath: "infrastructure"
  #     location: "$(location)"
  #     owner: "$(owner)"
  #     costCenter: "$(costCenter)"
  #     application: "$(application)"
  #     desc: "$(desc)"
  #     repo: "$(repo)"
  #     version: "$(version)"
  #     partName: "$(partName)"
  #     resourceBase: "service bus namespace and topic"
  #     resources:
  #         - webApp: "sb"
  #           id: "sbTopics"
  #           name: "serviceBus and topics"
  #           path: "sbTop"
  #           dependencies: []
  #           paramOverride: ""

  # - template: "./templates/stages/stage-deploy-infra.yml@self"
  #   parameters:
  #     stage: StageProvisionInfrastructure_AppInsight
  #     dependsOn:
  #       - StageProvisionInfrastructure_ServiceBus
  #     condition: "succeeded()"
  #     serviceConnection: "${{ parameters.serviceConnection }}"
  #     rgName: "$(rgName)"
  #     infraPath: "infrastructure"
  #     location: "$(location)"
  #     owner: "$(owner)"
  #     costCenter: "$(costCenter)"
  #     application: "$(application)"
  #     desc: "$(desc)"
  #     repo: "$(repo)"
  #     version: "$(version)"
  #     partName: "$(partName)"
  #     resourceBase: "service bus namespace and topic"
  #     resources:
  #         - webApp: "AppInsight"
  #           id: "AppInisght"
  #           name: "App Inisght and log space"
  #           path: "appInsight"
  #           dependencies: []
  #           paramOverride: ""
  
  # - template: "./templates/stages/stage-deploy-infra.yml@self"
  #   parameters:
  #     stage: StageProvisionInfrastructure_funcApp
  #     dependsOn:
  #       - StageProvisionInfrastructure_AppInsight
  #     condition: "succeeded()"
  #     serviceConnection: "${{ parameters.serviceConnection }}"
  #     rgName: "$(rgName)"
  #     infraPath: "infrastructure"
  #     location: "$(location)"
  #     owner: "$(owner)"
  #     costCenter: "$(costCenter)"
  #     application: "$(application)"
  #     desc: "$(desc)"
  #     repo: "$(repo)"
  #     version: "$(version)"
  #     partName: "$(partName)"
  #     resourceBase: "function app integration"
  #     resources:
  #         - webApp: "funcApp"
  #           id: "funcApp"
  #           name: "function app integration"
  #           path: "funcApp"
  #           dependencies: []
  #           paramOverride: >-
  #             -containerName "products"

